{"ast":null,"code":"var _jsxFileName = \"/Users/Grace/Development/personal/hellogracecho.com/home/gracefulproject/food-recipe/src/App.js\";\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Recipes from './components/Recipes';\nimport Recipe from './components/Recipe';\nimport About from './components/About';\nimport Header from './components/Header';\nimport './App.css';\n\nconst App = () => {\n  const APP_ID = '61085f7e';\n  const APP_KEY = 'e3238ca787f9507ef2159b0bf62ac8fc';\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState('');\n  const [query, setQuery] = useState('kimchi');\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    getRecipes();\n  }, [query]);\n\n  const getRecipes = async () => {\n    const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n    const data = await response.json();\n    setRecipes(data.hits);\n    setLoading(true);\n\n    if (data.hits.length === 0) {\n      setLoading(false);\n    }\n  };\n\n  const updateSearch = e => {\n    setSearch(e.target.value);\n  }; // Search only gets updated when the query is set/ button is clicked\n\n\n  const getSearch = e => {\n    e.preventDefault();\n\n    if (search.trim() === '') {\n      return;\n    }\n\n    setLoading(true);\n    setQuery(search); // Clear the input field\n\n    setSearch('');\n  };\n\n  const renderSearch = () => {\n    if (recipes.length === 0 && !loading) {\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"errorMessage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }, \"There is no result of \", query, \". Please try again.\");\n    } else {\n      return /*#__PURE__*/React.createElement(\"h1\", {\n        className: \"search-result\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 14\n        }\n      }, \"Search Result: \", query);\n    }\n  };\n\n  const renderBody = () => {\n    return recipes.map(recipe => /*#__PURE__*/React.createElement(Recipe, {\n      key: recipe.recipe.label,\n      title: recipe.recipe.label,\n      calories: recipe.recipe.calories,\n      image: recipe.recipe.image,\n      ingredients: recipe.recipe.ingredients,\n      tags: recipe.recipe.healthLabels,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    getSearch: getSearch,\n    search: search,\n    updateSearch: updateSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"main\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Recipes, {\n    renderSearch: renderSearch,\n    renderBody: renderBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/Grace/Development/personal/hellogracecho.com/home/gracefulproject/food-recipe/src/App.js"],"names":["React","useEffect","useState","BrowserRouter","Router","Switch","Route","Recipes","Recipe","About","Header","App","APP_ID","APP_KEY","recipes","setRecipes","search","setSearch","query","setQuery","loading","setLoading","getRecipes","response","fetch","data","json","hits","length","updateSearch","e","target","value","getSearch","preventDefault","trim","renderSearch","renderBody","map","recipe","label","calories","image","ingredients","healthLabels"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Recipes from './components/Recipes';\nimport Recipe from './components/Recipe';\nimport About from './components/About';\nimport Header from './components/Header';\nimport './App.css';\n\nconst App = () => {\n  const APP_ID = '61085f7e';\n  const APP_KEY = 'e3238ca787f9507ef2159b0bf62ac8fc';\n\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState('');\n  const [query, setQuery] = useState('kimchi');\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    getRecipes();\n  }, [query]);\n\n  const getRecipes = async () => {\n    const response = await fetch(\n      `https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`\n    );\n    const data = await response.json();\n\n    setRecipes(data.hits);\n    setLoading(true);\n    if (data.hits.length === 0) {\n      setLoading(false);\n    }\n  };\n\n  const updateSearch = (e) => {\n    setSearch(e.target.value);\n  };\n\n  // Search only gets updated when the query is set/ button is clicked\n  const getSearch = (e) => {\n    e.preventDefault();\n    if (search.trim() === '') {\n      return;\n    }\n\n    setLoading(true);\n    setQuery(search);\n    // Clear the input field\n    setSearch('');\n  };\n\n  const renderSearch = () => {\n    if (recipes.length === 0 && !loading) {\n      return (\n        <h1 className='errorMessage'>\n          There is no result of {query}. Please try again.\n        </h1>\n      );\n    } else {\n      return <h1 className='search-result'>Search Result: {query}</h1>;\n    }\n  };\n\n  const renderBody = () => {\n    return recipes.map((recipe) => (\n      <Recipe\n        key={recipe.recipe.label}\n        title={recipe.recipe.label}\n        calories={recipe.recipe.calories}\n        image={recipe.recipe.image}\n        ingredients={recipe.recipe.ingredients}\n        tags={recipe.recipe.healthLabels}\n      />\n    ));\n  };\n\n  return (\n    <div>\n      <Header\n        getSearch={getSearch}\n        search={search}\n        updateSearch={updateSearch}\n      />\n      <main>\n        <Recipes renderSearch={renderSearch} renderBody={renderBody} />\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}